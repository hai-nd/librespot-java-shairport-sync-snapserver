####################### LATEST VERSION ###########################
# Stage 1: Build Librespot with librespot-metadata
FROM rust:1.75.0-slim AS librespot-builder

##### Install dependencies for building Librespot
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    pkg-config \
    build-essential \
    ca-certificates \
    cmake \
    libasound2-dev \
    libavahi-client-dev \
    libavahi-compat-libdnssd-dev \  
    libpulse-dev \
    libdbus-1-dev \
    libssl-dev \
    libprotobuf-dev \
    protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

##### Environment optimizations for Rust build
ENV CARGO_REGISTRIES_CRATES_IO_PROTOCOL="sparse"
ENV CARGO_INCREMENTAL=0
ENV RUSTFLAGS="-C strip=symbols"

##### Clone the Librespot project and prepare for building
WORKDIR /librespot
RUN git clone https://github.com/librespot-org/librespot.git . && \
    git checkout dev

##### Add your custom librespot-metadata source
COPY metadata /librespot/metadata

##### Replace the root Cargo.toml with your fixed version
COPY Cargo.toml /librespot/Cargo.toml

##### Build Librespot with metadata support
RUN cargo build --release --no-default-features \
    --features "with-dns-sd,alsa-backend,metadata" -j $(nproc)

##### Collect binaries and shared libraries
RUN mkdir /output && \
    cp /librespot/target/release/librespot /output/ && \
    ldd /librespot/target/release/librespot | awk '{print $3}' | grep -v '(' | xargs -I '{}' cp -v '{}' /output/

# Stage 2: Build Snapserver and Snapweb
FROM debian:bookworm-slim AS snapcast-builder

##### Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    cmake \
    git \
    libboost-dev \
    libasound2-dev \
    libpulse-dev \
    libvorbisidec-dev \
    libvorbis-dev \
    libopus-dev \
    libflac-dev \
    libsoxr-dev \
    libavahi-client-dev \
    libexpat1-dev \
    npm \
    && rm -rf /var/lib/apt/lists/*

##### Build Snapserver checkout 245921009e015ed3cd1f635aed51b63cae7c1600
RUN git clone https://github.com/badaix/snapcast.git /snapcast \
    && cd /snapcast \
    && git checkout tags/v0.29.0 
WORKDIR /snapcast
RUN cmake -S . -B build -DBUILD_CLIENT=OFF \
    && cmake --build build -j $(nproc) --verbose \
    && strip -s ./bin/snapserver

##### Collect Snapserver shared libraries
RUN mkdir /snapserver-libs && \
    ldd /snapcast/bin/snapserver | cut -d" " -f3 | xargs cp --dereference --target-directory=/snapserver-libs/

##### Build Snapweb
RUN git clone https://github.com/badaix/snapweb.git /snapweb
WORKDIR /snapweb
RUN git checkout eb23e03e9f7dc735f37b8e413fb803f1265938e2

##### Install Node.js 20.x (and npm)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs

##### Verify Node.js and npm versions
RUN node -v && npm -v

##### Build Snapweb
ENV GENERATE_SOURCEMAP="false"
RUN npm ci && npm run build

# Stage 3: Merge Libraries and Finalize
FROM debian:bookworm-slim

##### Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    nano \
    dbus \
    avahi-daemon \
    libasound2 \
    libavahi-client3 \
    libavahi-compat-libdnssd1 \
    libpulse0 \
    libdbus-1-3 \
    libssl3 \
    libexpat1 \
    libsoxr-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

##### Copy Librespot binary and libraries
COPY --from=librespot-builder /output/ /usr/bin/
COPY --from=librespot-builder /output/*.so* /tmp-libs/

##### Copy Snapserver binary and libraries
COPY --from=snapcast-builder /snapcast/bin/snapserver /usr/local/bin/
COPY --from=snapcast-builder /snapserver-libs/ /tmp-libs/

##### Copy Snapweb frontend
COPY --from=snapcast-builder /snapweb/dist /usr/share/snapserver/snapweb

##### Deduplicate Libraries
RUN mkdir -p /usr/lib/merged-libs && \
    cp -r /tmp-libs/* /usr/lib/merged-libs/ && \
    rm -rf /tmp-libs

##### Set up configuration
RUN mkdir -p /etc/plug-ins
COPY ./plug-ins/meta_mopidy.py /etc/plug-ins/
COPY ./plug-ins/meta_mpd.py /etc/plug-ins/
COPY ./plug-ins/meta_librespot-java.py /etc/plug-ins/
RUN chmod -R +x /etc/plug-ins && chmod -R 777 /etc/plug-ins
RUN mkfifo /tmp/snapfifo
RUN chmod -R 777 /tmp/snapfifo
# Symbolic links for configuration
RUN mkdir -p /config && \
    rm -f /etc/snapserver.conf && \
    ln -s /config/snapserver.conf /etc/snapserver.conf && \
    ln -s /config/credentials.json /etc/credentials.json && \
    ln -s /config/plug-ins /etc/plug-ins

##### Expose ports and run Snapserver
EXPOSE 1704 1705 1780 12345
CMD ["snapserver", "-c", "/etc/snapserver.conf"]